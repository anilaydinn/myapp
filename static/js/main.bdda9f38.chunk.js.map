{"version":3,"sources":["static/pp.jpg","api/index.js","components/Home.js","components/App.js","reportWebVitals.js","index.js"],"names":["getRepos","a","axios","get","resp","status","data","useStyles","makeStyles","theme","mainContainer","display","justifyContent","height","width","margin","mainWrapper","padding","maxHeight","overflowY","overflow","breakpoints","down","heading","profilePic","borderRadius","profileHeadingText","marginBottom","fontSize","socialButtons","marginTop","gridTemplateColumns","columnGap","socialButton","cursor","link","color","repos","reposWrapper","reposHeading","textAlign","repoItem","backgroundColor","reposContainer","repoImg","alignItems","repoHeading","fontFamily","repoTextPart","seeOnGithubButton","textContainer","Home","props","useState","setRepos","useEffect","getReposHandler","console","log","classes","className","style","alt","src","pp","href","map","repo","name","textDecoration","html_url","id","App","exact","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.bdda9f38.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/pp.dc462d80.jpg\";","import axios from \"axios\";\n\nexport const getRepos = async () => {\n  const resp = await axios.get(\"https://api.github.com/users/anilaydinn/repos\");\n  return resp.status === 200 ? resp.data : null;\n};\n","import React, { useState, useEffect } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport pp from \"../static/pp.jpg\";\nimport LinkedInIcon from \"@material-ui/icons/LinkedIn\";\nimport GitHubIcon from \"@material-ui/icons/GitHub\";\nimport FacebookIcon from \"@material-ui/icons/Facebook\";\nimport InstagramIcon from \"@material-ui/icons/Instagram\";\nimport TwitterIcon from \"@material-ui/icons/Twitter\";\nimport { getRepos } from \"../api\";\n\nconst useStyles = makeStyles((theme) => ({\n  mainContainer: {\n    display: \"flex\",\n    justifyContent: \"center\",\n    height: \"100vh\",\n    width: \"100%\",\n    margin: \"0px\",\n  },\n  mainWrapper: {\n    padding: \"15px\",\n    width: \"75%\",\n    maxHeight: \"950px\",\n    overflowY: \"scroll\",\n    overflow: \"auto\",\n    [theme.breakpoints.down(\"sm\")]: {\n      width: \"100%\",\n    },\n  },\n  heading: {\n    display: \"block\",\n  },\n  profilePic: {\n    width: \"150px\",\n    height: \"150px\",\n    borderRadius: \"90px\",\n  },\n  profileHeadingText: {\n    display: \"flex\",\n    justifyContent: \"center\",\n    width: \"100%\",\n    marginBottom: \"20px\",\n    fontSize: \"50px\",\n    [theme.breakpoints.down(\"xs\")]: {\n      fontSize: \"35px\",\n    },\n  },\n  socialButtons: {\n    display: \"grid\",\n    marginTop: \"10px\",\n    gridTemplateColumns: \"auto auto auto auto auto\",\n    columnGap: \"20px\",\n    justifyContent: \"center\",\n    width: \"100%\",\n  },\n  socialButton: {\n    cursor: \"pointer\",\n    fontSize: \"40px\",\n    [theme.breakpoints.down(\"xs\")]: {\n      fontSize: \"30px\",\n    },\n  },\n  link: {\n    color: \"black\",\n  },\n  repos: {\n    display: \"flex\",\n    justifyContent: \"center\",\n    marginTop: \"20px\",\n  },\n  reposWrapper: {\n    width: \"75%\",\n    fontSize: \"35px\",\n  },\n  reposHeading: {\n    textAlign: \"center\",\n    marginTop: \"50px\",\n    [theme.breakpoints.down(\"xs\")]: {\n      fontSize: \"18px\",\n      marginTop: \"15px\",\n    },\n  },\n  repoItem: {\n    borderRadius: \"3px\",\n    display: \"flex\",\n    width: \"100%\",\n    backgroundColor: \"#eae8e7\",\n    height: \"200px\",\n    marginTop: \"10px\",\n    [theme.breakpoints.down(\"xs\")]: {\n      width: \"100%\",\n    },\n  },\n  reposContainer: {\n    marginTop: \"20px\",\n  },\n  repoImg: {\n    display: \"flex\",\n    width: \"33%\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n  },\n  repoHeading: {\n    marginTop: \"20px\",\n    display: \"flex\",\n    justifyContent: \"center\",\n    fontSize: \"22px\",\n    fontFamily: \"Open Sans\",\n    [theme.breakpoints.down(\"xs\")]: {\n      fontSize: \"14px\",\n    },\n  },\n  repoTextPart: {\n    width: \"67%\",\n    height: \"100%\",\n  },\n  seeOnGithubButton: {\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    backgroundColor: \"black\",\n    textAlign: \"center\",\n    width: \"120px\",\n    height: \"45px\",\n    color: \"#FFF\",\n    fontSize: \"16px\",\n    borderRadius: \"10px\",\n    cursor: \"pointer\",\n    [theme.breakpoints.down(\"xs\")]: {\n      width: \"90px\",\n      height: \"40px\",\n      fontSize: \"12px\",\n    },\n  },\n  textContainer: {\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    height: \"100%\",\n  },\n}));\n\nexport default function Home(props) {\n  const [repos, setRepos] = useState([]);\n\n  useEffect(() => {\n    getReposHandler();\n  }, []);\n\n  const getReposHandler = async () => {\n    const data = await getRepos();\n    setRepos(data);\n  };\n\n  console.log(repos);\n\n  const classes = useStyles(props);\n  return (\n    <div className={classes.mainContainer}>\n      <div className={classes.mainWrapper}>\n        <div className={classes.heading}>\n          <div\n            style={{\n              marginBottom: \"20px\",\n              width: \"100%\",\n              display: \"flex\",\n              justifyContent: \"center\",\n            }}\n          >\n            <img alt=\"profile\" src={pp} className={classes.profilePic} />\n          </div>\n          <div className={classes.profileHeadingText}>An覺l Ayd覺n</div>\n        </div>\n\n        <div className={classes.socialButtons}>\n          <a\n            className={classes.link}\n            href=\"https://www.linkedin.com/in/an覺l-ayd覺n-65aa13145\"\n          >\n            <LinkedInIcon className={classes.socialButton} />\n          </a>\n          <a className={classes.link} href=\"https://github.com/anilaydinn\">\n            <GitHubIcon className={classes.socialButton} />\n          </a>\n          <a className={classes.link} href=\"https://twitter.com/anllaydin\">\n            <TwitterIcon className={classes.socialButton} />\n          </a>\n          <a\n            className={classes.link}\n            href=\"https://www.instagram.com/anlaydinn/\"\n          >\n            <InstagramIcon className={classes.socialButton} />\n          </a>\n          <a\n            className={classes.link}\n            href=\"https://www.facebook.com/Reypirking/\"\n          >\n            <FacebookIcon className={classes.socialButton} />\n          </a>\n        </div>\n\n        <div className={classes.repos}>\n          <div className={classes.reposWrapper}>\n            <div className={classes.reposHeading}>My Github Repositories</div>\n            <div className={classes.reposContainer}>\n              {repos.map((repo) => (\n                <div className={classes.repoItem} key={repo.id}>\n                  <div className={classes.repoImg}>\n                    <GitHubIcon style={{ fontSize: \"50px\" }} />\n                  </div>\n                  <div className={classes.repoTextPart}>\n                    <div className={classes.repoHeading}>{repo.name}</div>\n                    <div className={classes.textContainer}>\n                      <a\n                        style={{ textDecoration: \"none\" }}\n                        href={repo.html_url}\n                      >\n                        <div className={classes.seeOnGithubButton}>\n                          See On Github\n                        </div>\n                      </a>\n                    </div>\n                  </div>\n                </div>\n              ))}\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n","import React from \"react\";\nimport Home from \"./Home\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\n\nexport default function App() {\n  return (\n    <Router>\n      <Switch>\n        <Route exact path=\"/myapp\">\n          <Home />\n        </Route>\n      </Switch>\n    </Router>\n  );\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}